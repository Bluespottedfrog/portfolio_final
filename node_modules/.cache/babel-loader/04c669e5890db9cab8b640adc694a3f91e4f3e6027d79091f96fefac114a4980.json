{"ast":null,"code":"var _jsxFileName = \"E:\\\\portfolio-thomas\\\\src\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Projects() {\n  _s();\n  const canvasRef = useRef(null);\n  const cursorRef = useRef(null);\n  useEffect(() => {\n    // GLOBAL VARIABLES\n    var posx = 0;\n    var fps = 60;\n    var projectIndex = 1;\n    var mouse = {\n      x: 0,\n      y: undefined,\n      dx: 2,\n      down: false,\n      downPos: 0,\n      distance: 0,\n      hovering: false,\n      clicked: false\n    };\n    var canvas = canvasRef.current;\n    var cursor = cursorRef.current;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    window.onresize = e => {\n      canvas.height = window.innerHeight;\n      canvas.width = window.innerWidth;\n    };\n    var c = canvas.getContext('2d');\n\n    //Temp img\n    let img = new Image();\n    img.src = 'test.jpg';\n    canvas.onmousemove = e => {\n      mouse.x = e.x;\n      mouse.y = e.y;\n      if (mouse.hovering) {\n        cursor.style.display = 'block';\n        cursor.style.top = mouse.y + 12 + 'px';\n        cursor.style.left = mouse.x + 8 + 'px';\n      } else {\n        cursor.style.display = 'none';\n      }\n      //If not mouse down, then just return\n      if (!mouse.down) return;\n      e.preventDefault();\n\n      //otherwise, is dragging\n      setTimeout(function () {\n        mouse.downPos = e.x;\n      }, 100);\n      mouse.distance = e.x - mouse.downPos;\n      var direction = 1;\n      if (mouse.distance < 0) direction = -1;\n      mouse.dx = Math.abs(mouse.distance / 20) * direction;\n    };\n    //drag start\n    canvas.onmousedown = e => {\n      if (!mouse.down) {\n        mouse.downPos = e.x;\n      }\n      mouse.down = true;\n    };\n    canvas.onmouseup = e => {\n      mouse.down = false;\n      mouse.prevPos = mouse.x;\n    };\n\n    //If Scroll\n    canvas.onwheel = e => {\n      var direction = 0;\n      if (e.deltaY < 0) {\n        //scrolling up\n        direction = 1;\n      }\n      if (e.deltaY > 0) {\n        //scrolling down\n        direction = -1;\n      }\n      mouse.distance = 1;\n      mouse.dx = 8 * direction;\n    };\n\n    //On Click\n\n    canvas.onclick = e => {\n      if (!mouse.hovering) return;\n      mouse.clicked = true;\n      console.log('clicked!');\n    };\n    class ImageBox {\n      constructor(ap) {\n        this.offset = 28;\n        this.x = canvas.width / 6 + this.w * this.arrayPosition;\n        this.y = canvas.height / 2 - this.h / 2;\n        this.w = 400;\n        this.h = 400;\n        this.imgWidth = img.width;\n        this.imgHeight = img.height;\n        this.maxW = 0;\n        this.maxH = 0;\n        this.sx = img.width / (img.width / this.imgHeight * this.h / this.w);\n        this.arrayPosition = ap;\n      }\n      image(context, h1) {\n        /*\r\n        var w, h;\r\n        var sx, sy;\r\n        var imgWidth, imgHeight;\r\n        var x, y;\r\n        */\n        //margin between cards\n        var margin = 40 * this.arrayPosition;\n\n        //parallax distance\n        var parallax = img.width / 30 * (posx / canvas.width);\n\n        //dimensions of card\n        /*\r\n        w = 400; // keep at 320\r\n        h = 400;\r\n        */\n        //scale\n\n        this.imgHeight = img.height - img.height / 20;\n        this.sx = img.width / (img.width / (this.imgHeight - this.imgHeight / 20) * this.h / this.w);\n\n        //x, y coords\n        //x, y coords\n\n        console.log(\"width: \" + canvas.width + \" this.w: \" + this.w);\n        var wdx = 5;\n        var idx = 5;\n        if (mouse.clicked && this.arrayPosition == projectIndex) {\n          if (this.w + this.maxW < canvas.width) {\n            //this.w += idx;\n            this.x -= wdx;\n            this.y -= wdx;\n            this.maxW += idx;\n            this.maxH += idx;\n          }\n        } else if (mouse.clicked) {\n          this.x += wdx;\n        } else {\n          this.x = canvas.width / 6 + this.w * this.arrayPosition + margin + posx;\n          this.y = canvas.height / 2 - this.h / 2;\n        }\n        context.save();\n        const rect = new Path2D();\n        rect.rect(this.x, this.y, this.w + this.maxW, this.h + this.maxH);\n        context.clip(rect);\n        context.drawImage(img, img.width / 2 - this.w, img.height / 2 - this.h, this.w * 2, this.h * 2, this.x + parallax, this.y, img.width / 10, img.height / 10);\n        context.restore();\n        //context.drawImage(img, img.width/3 + parallax, (img.height/20)/2, sx, imgHeight, x, y, w, h);\n\n        //If true, the image is in view\n        if (this.x < canvas.width / 2 && this.x + this.w > canvas.width / 2) {\n          projectIndex = this.arrayPosition;\n          //check if hovering\n          if (mouse.x > this.x && mouse.x < this.x + this.w) {\n            if (mouse.y > this.y && mouse.y < this.y + this.h) {\n              mouse.hovering = true;\n            } else {\n              mouse.hovering = false;\n            }\n          } else {\n            mouse.hovering = false;\n          }\n        }\n        h1.set(this.x, this.y + this.h + 32);\n        h1.drawHeader();\n        h1.drawSubheader();\n      }\n    }\n    var offset = 28;\n    function image(context, arrayPosition, h1) {\n      var w, h;\n      var sx, sy;\n      var imgWidth, imgHeight;\n      var x, y;\n\n      //margin between cards\n      var margin = 40 * arrayPosition;\n\n      //parallax distance\n      var parallax = img.width / 30 * (posx / canvas.width);\n\n      //dimensions of card\n      w = 400; // keep at 320\n      h = 400;\n\n      //scale\n      imgHeight = img.height - img.height / 20;\n      sx = img.width / (img.width / imgHeight * h / w);\n\n      //x, y coords\n      x = canvas.width / 6 + w * arrayPosition + margin + posx;\n      y = canvas.height / 2 - h / 2;\n      if (mouse.clicked) {\n        var wdx = 0.1;\n        var idx = 0.1;\n        if (x > 0) {\n          x -= wdx;\n        }\n        if (y > 0) {\n          y -= wdx;\n        }\n        if (w < canvas.width) {\n          w += idx;\n        }\n        if (h < canvas.height) {\n          h += idx;\n        }\n        console.log('working');\n      }\n      context.save();\n      const rect = new Path2D();\n      rect.rect(x, y, w, h);\n      context.clip(rect);\n      context.drawImage(img, x + parallax, y, img.width / 10, img.height / 10);\n      context.restore();\n      //context.drawImage(img, img.width/3 + parallax, (img.height/20)/2, sx, imgHeight, x, y, w, h);\n\n      //If true, the image is in view\n      if (x < canvas.width / 2 && x + w > canvas.width / 2) {\n        projectIndex = arrayPosition;\n        //check if hovering\n        if (mouse.x > x && mouse.x < x + w) {\n          if (mouse.y > y && mouse.y < y + h) {\n            mouse.hovering = true;\n          } else {\n            mouse.hovering = false;\n          }\n        } else {\n          mouse.hovering = false;\n        }\n      }\n      h1.set(x, y + h + 32);\n      h1.drawHeader();\n      h1.drawSubheader();\n      //subheader(\"IMMERSIVE EXPERIENCE\", x, y + h + 32 + 20);\n    }\n\n    class Header {\n      constructor(text, subtext) {\n        this.text = text;\n        this.subtext = subtext;\n        this.x = 0;\n        this.y = 0;\n        this.dy = 0.5;\n        this.fontSize = 24;\n        this.offset = 24 + 4;\n        this.switch = false;\n        this.jumble = \"\";\n        this.count = 0;\n        this.fps = 60;\n      }\n      set(x, y) {\n        this.x = x;\n        this.y = y;\n      }\n      drawHeader() {\n        c.font = `500 ${this.fontSize}px GT America`;\n        c.save();\n        const rect = new Path2D();\n        rect.rect(this.x, this.y - 26, c.measureText(this.text).width, 28);\n        c.clip(rect);\n        c.fillStyle = \"rgba(244, 244,244, 1)\";\n        c.fill();\n        if (this.x < canvas.width / 2 && this.x + 400 > canvas.width / 2 && !this.switch) {\n          this.offset -= this.dy;\n          if (this.offset <= 20) {\n            this.dy *= 0.975;\n            if (this.offset < 0.5) {\n              this.dy = 0;\n              this.offset = 0;\n              this.switch = true;\n            }\n          }\n        } else {\n          if (this.offset > -(this.fontSize + 4) && this.offset < this.fontSize + 4) {\n            this.dy = 0.5;\n            this.offset -= this.dy;\n          }\n        }\n        if (this.offset <= -(this.fontSize + 4)) {\n          this.offset = this.fontSize + 4;\n          this.switch = false;\n        }\n        c.fillText(this.text, this.x, this.y - this.offset);\n        c.restore();\n      }\n\n      //MIGHT WANT TO CHANGE AFTER\n      drawSubheader() {\n        const collection = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        if (this.fps > 4) {\n          if (this.x < canvas.width / 2 && this.x + 400 > canvas.width / 2) {\n            //Jumble into randomness of length text\n            if (this.jumble.length < this.subtext.length) {\n              var newString = \"\";\n              for (var i = 0; i < this.jumble.length; i++) {\n                newString += collection[Math.floor(Math.random() * collection.length)];\n              }\n              this.jumble = newString;\n              this.jumble += collection[Math.floor(Math.random() * collection.length)];\n            } else if (this.jumble.length >= this.subtext.length && this.jumble != this.subtext) {\n              //Jumble into the text itself\n              var newString = \"\";\n              if (this.count < this.subtext.length) {\n                newString += this.subtext.substring(0, this.count + 1);\n                this.count++;\n              }\n              for (var i = this.count + 1; i <= this.subtext.length; i++) {\n                newString += collection[Math.floor(Math.random() * collection.length)];\n              }\n              this.jumble = newString;\n            }\n          } else {\n            //Jumble into nothingness\n            this.count = 0;\n            var newString = \"\";\n            for (var i = this.count + 1; i <= this.jumble.length; i++) {\n              newString += collection[Math.floor(Math.random() * collection.length)];\n            }\n            this.jumble = newString;\n            this.jumble = this.jumble.substring(0, this.jumble.length - 1);\n          }\n          this.fps = 0;\n        }\n        c.font = \"400 12px GT America Mono\";\n        c.fillStyle = \"rgba(244, 244, 244, 1)\";\n        c.fill();\n        c.fillText(this.jumble, this.x, this.y + 20);\n        this.fps++;\n      }\n    }\n    function drawNav(w) {\n      var rem = 16;\n      var length = Math.floor(w / rem);\n      var h = canvas.height - 4 * rem;\n      c.save();\n      //Move origin to bottom center\n      c.translate(canvas.width / 2 - w / 2, h);\n\n      //Current project out of x being viewed\n      c.font = \"400 12px GT America Mono\";\n      c.fillStyle = \"rgba(244, 244, 244, 1)\";\n      c.fill();\n      c.fillText('0' + projectIndex, 0, 8);\n      c.fillText('0' + 5, w - 24, 8);\n      const rect = new Path2D();\n      rect.rect(100, -12.5, 200, 50);\n      c.clip(rect);\n\n      //Iterate by project total * 5\n      for (var i = 0; i <= length; i++) {\n        var x = i * rem + posx / rem;\n        c.beginPath();\n        //Height is function of position\n        if (x > w / 2 - 10 && x <= w / 2) {\n          c.moveTo(x, -2);\n          c.lineTo(x, 10);\n        } else if (x > w / 2 - 30 && x < w / 2 + 10) {\n          c.moveTo(x, -1);\n          c.lineTo(x, 9);\n        } else {\n          c.moveTo(x, 0);\n          c.lineTo(x, 8);\n        }\n        c.strokeStyle = \"#f4f4f4\";\n        c.stroke();\n      }\n\n      //Left Gradient\n      const g1 = c.createLinearGradient(100, 0, 200, 0);\n      g1.addColorStop(0, 'rgba(0,0,0,1)');\n      g1.addColorStop(1, 'rgba(0,0,0,0)');\n\n      //Right Gradient\n      const g2 = c.createLinearGradient(200, 0, 300, 0);\n      g2.addColorStop(0, 'rgba(0,0,0,0)');\n      g2.addColorStop(1, 'rgba(0,0,0,1)');\n      c.fillStyle = g1;\n      c.fillRect(100, -2, 100, 20);\n      c.fillStyle = g2;\n      c.fillRect(200, -2, 100, 20);\n      c.restore();\n    }\n\n    //Probably want to load these from a text file\n    var header1 = new Header(\"THOUGHT POLICE\", \"IMMERSION\");\n    var header2 = new Header(\"LA BATIE\", \"WEB DESIGN\");\n    var header3 = new Header(\"ITALIST\", \"UX DESIGN\");\n    var header4 = new Header(\"DEAR VAN GOGH\", \"IMMERSIVE ENVIRONMENT\");\n    var header5 = new Header(\"LAMPANELLA\", \"INDUSTRIAL DESIGN\");\n    var img1 = new ImageBox(1);\n    var img2 = new ImageBox(2);\n    var img3 = new ImageBox(3);\n    var img4 = new ImageBox(4);\n    var img5 = new ImageBox(5);\n\n    //Animates Everything\n    function draw() {\n      img1.image(c, header1);\n      img2.image(c, header2);\n      img3.image(c, header3);\n      img4.image(c, header4);\n      img5.image(c, header5);\n      drawNav(400);\n    }\n    function animate() {\n      requestAnimationFrame(animate);\n      c.clearRect(0, 0, canvas.width, canvas.height);\n\n      //Limit distance\n      if (posx != mouse.distance) {\n        if (mouse.dx < 0 && posx > -(canvas.width - 160) || mouse.dx > 0 && posx < 440) {\n          posx += mouse.dx;\n          mouse.dx *= 0.97;\n        }\n      }\n      //draw\n      draw();\n    }\n    animate();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      ref: cursorRef,\n      className: \"cursor\",\n      children: \"open \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      id: \"canvas\",\n      width: 0,\n      height: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Projects, \"xoeWl7MObrgKOl/DWHSIsVg8hTU=\");\n_c = Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Projects","_s","canvasRef","cursorRef","posx","fps","projectIndex","mouse","x","y","undefined","dx","down","downPos","distance","hovering","clicked","canvas","current","cursor","width","window","innerWidth","height","innerHeight","onresize","e","c","getContext","img","Image","src","onmousemove","style","display","top","left","preventDefault","setTimeout","direction","Math","abs","onmousedown","onmouseup","prevPos","onwheel","deltaY","onclick","console","log","ImageBox","constructor","ap","offset","w","arrayPosition","h","imgWidth","imgHeight","maxW","maxH","sx","image","context","h1","margin","parallax","wdx","idx","save","rect","Path2D","clip","drawImage","restore","set","drawHeader","drawSubheader","sy","Header","text","subtext","dy","fontSize","switch","jumble","count","font","measureText","fillStyle","fill","fillText","collection","length","newString","i","floor","random","substring","drawNav","rem","translate","beginPath","moveTo","lineTo","strokeStyle","stroke","g1","createLinearGradient","addColorStop","g2","fillRect","header1","header2","header3","header4","header5","img1","img2","img3","img4","img5","draw","animate","requestAnimationFrame","clearRect","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["E:/portfolio-thomas/src/Projects.js"],"sourcesContent":["import {useRef, useEffect} from 'react';\r\n\r\nexport default function Projects(){\r\n  const canvasRef = useRef(null);\r\n  const cursorRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // GLOBAL VARIABLES\r\n    var posx = 0;\r\n    var fps = 60;\r\n    var projectIndex = 1;\r\n\r\n    var mouse = {\r\n      x: 0,\r\n      y: undefined,\r\n      dx: 2,\r\n      down: false,\r\n      downPos: 0,\r\n      distance: 0,\r\n      hovering: false,\r\n      clicked: false,\r\n\r\n    }\r\n\r\n    var canvas = canvasRef.current;\r\n    var cursor = cursorRef.current;\r\n\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n\r\n    window.onresize = e => {\r\n      canvas.height = window.innerHeight;\r\n      canvas.width = window.innerWidth;\r\n    }\r\n\r\n    var c = canvas.getContext('2d');\r\n\r\n    //Temp img\r\n    let img = new Image();\r\n    img.src = 'test.jpg';\r\n\r\n    canvas.onmousemove = e => {\r\n      mouse.x = e.x;\r\n      mouse.y = e.y;\r\n\r\n      if(mouse.hovering){\r\n        cursor.style.display = 'block';\r\n        cursor.style.top = mouse.y + 12 + 'px';\r\n        cursor.style.left = mouse.x + 8 + 'px';\r\n      }\r\n      else{\r\n        cursor.style.display = 'none';\r\n      }\r\n      //If not mouse down, then just return\r\n      if(!mouse.down) return;\r\n      e.preventDefault();\r\n\r\n      //otherwise, is dragging\r\n      setTimeout(function(){\r\n        mouse.downPos = e.x;\r\n      }, 100);\r\n\r\n      mouse.distance = e.x - mouse.downPos;\r\n      var direction = 1;\r\n\r\n      if(mouse.distance < 0) direction = -1;\r\n      mouse.dx = Math.abs(mouse.distance/20) * direction;\r\n\r\n    };\r\n    //drag start\r\n    canvas.onmousedown = e =>{\r\n      if(!mouse.down){\r\n        mouse.downPos = e.x;\r\n      }\r\n      mouse.down = true;\r\n\r\n    }\r\n\r\n    canvas.onmouseup = e =>{\r\n      mouse.down = false;\r\n      mouse.prevPos = mouse.x;\r\n    }\r\n\r\n    //If Scroll\r\n    canvas.onwheel = e =>{\r\n      var direction = 0;\r\n      if(e.deltaY < 0){\r\n        //scrolling up\r\n        direction = 1;\r\n      }\r\n      if(e.deltaY > 0){\r\n        //scrolling down\r\n        direction = -1;\r\n      }\r\n      mouse.distance = 1;\r\n      mouse.dx = 8 * direction;\r\n    }\r\n\r\n    //On Click\r\n\r\n    canvas.onclick = e =>{\r\n      if(!mouse.hovering) return;\r\n      mouse.clicked = true;\r\n      console.log('clicked!');\r\n    }\r\n\r\n    class ImageBox{\r\n\r\n    constructor(ap){\r\n      this.offset = 28;\r\n      this.x = (canvas.width/6 + (this.w * this.arrayPosition)) ;\r\n      this.y = canvas.height/2 - this.h/2;\r\n      this.w = 400;\r\n      this.h = 400;\r\n      this.imgWidth = img.width;\r\n      this.imgHeight = img.height;\r\n      this.maxW = 0;\r\n      this.maxH = 0;\r\n      this.sx = img.width/(img.width/this.imgHeight * this.h/this.w);\r\n      this.arrayPosition = ap;\r\n    }\r\n\r\n    image(context, h1){\r\n      /*\r\n      var w, h;\r\n      var sx, sy;\r\n      var imgWidth, imgHeight;\r\n      var x, y;\r\n      */\r\n      //margin between cards\r\n      var margin = 40 * this.arrayPosition;\r\n\r\n      //parallax distance\r\n      var parallax = img.width/30 *(posx / (canvas.width));\r\n\r\n      //dimensions of card\r\n      /*\r\n      w = 400; // keep at 320\r\n      h = 400;\r\n      */\r\n      //scale\r\n\r\n      this.imgHeight = img.height - img.height/20;\r\n      this.sx = img.width/(img.width/(this.imgHeight - this.imgHeight/20) * this.h/this.w);\r\n\r\n\r\n      //x, y coords\r\n      //x, y coords\r\n\r\nconsole.log(\"width: \" + canvas.width + \" this.w: \" + this.w);\r\n      var wdx = 5;\r\n      var idx = 5;\r\n      if(mouse.clicked && this.arrayPosition == projectIndex){\r\n        if(this.w + this.maxW < canvas.width){\r\n          //this.w += idx;\r\n          this.x -= wdx;\r\n          this.y -= wdx;\r\n          this.maxW += idx;\r\n          this.maxH += idx;\r\n        }\r\n      }\r\n      else if(mouse.clicked){\r\n        this.x += wdx;\r\n      }\r\n      else{\r\n        this.x = (canvas.width/6 + (this.w * this.arrayPosition)) + margin + posx;\r\n        this.y = canvas.height/2 - this.h/2;\r\n      }\r\n\r\n      context.save();\r\n        const rect = new Path2D();\r\n        rect.rect(this.x, this.y, this.w + this.maxW, this.h + this.maxH);\r\n        context.clip(rect);\r\n        context.drawImage(img, img.width/2 - this.w, img.height/2 - this.h,\r\n                               this.w*2, this.h*2,\r\n                               this.x + parallax, this.y,\r\n                               img.width/10,\r\n                               img.height/10);\r\n      context.restore();\r\n      //context.drawImage(img, img.width/3 + parallax, (img.height/20)/2, sx, imgHeight, x, y, w, h);\r\n\r\n      //If true, the image is in view\r\n      if(this.x < canvas.width/2 && this.x + this.w > canvas.width/2){\r\n        projectIndex = this.arrayPosition;\r\n        //check if hovering\r\n          if(mouse.x > this.x &&  mouse.x < this.x + this.w){\r\n            if(mouse.y > this.y && mouse.y < this.y + this.h ){\r\n              mouse.hovering = true;\r\n            }\r\n            else{\r\n              mouse.hovering = false;\r\n            }\r\n          }\r\n          else{\r\n            mouse.hovering = false;\r\n          }\r\n      }\r\n\r\n      h1.set(this.x, this.y + this.h + 32);\r\n      h1.drawHeader();\r\n      h1.drawSubheader();\r\n    }\r\n  }\r\n\r\n    var offset = 28;\r\n    function image(context, arrayPosition, h1){\r\n      var w, h;\r\n      var sx, sy;\r\n      var imgWidth, imgHeight;\r\n      var x, y;\r\n\r\n      //margin between cards\r\n      var margin = 40*arrayPosition;\r\n\r\n      //parallax distance\r\n      var parallax = img.width/30 *(posx / (canvas.width));\r\n\r\n      //dimensions of card\r\n      w = 400; // keep at 320\r\n      h = 400;\r\n\r\n      //scale\r\n      imgHeight = img.height - img.height/20;\r\n      sx = img.width/(img.width/imgHeight * h/w);\r\n\r\n\r\n      //x, y coords\r\n      x = (canvas.width/6 + (w * arrayPosition)) + margin + posx;\r\n      y = canvas.height/2 - h/2;\r\n\r\n      if(mouse.clicked){\r\n        var wdx = 0.1;\r\n        var idx = 0.1;\r\n        if(x > 0){\r\n          x -= wdx;\r\n        }\r\n        if(y > 0){\r\n          y -= wdx;\r\n        }\r\n        if(w < canvas.width){\r\n          w += idx;\r\n        }\r\n        if(h < canvas.height){\r\n          h += idx;\r\n        }\r\n\r\n        console.log('working');\r\n\r\n      }\r\n\r\n      context.save();\r\n        const rect = new Path2D();\r\n        rect.rect(x, y, w, h);\r\n        context.clip(rect);\r\n        context.drawImage(img, x + parallax, y, img.width/10, img.height/10);\r\n      context.restore();\r\n      //context.drawImage(img, img.width/3 + parallax, (img.height/20)/2, sx, imgHeight, x, y, w, h);\r\n\r\n      //If true, the image is in view\r\n      if(x < canvas.width/2 && x + w > canvas.width/2){\r\n        projectIndex = arrayPosition;\r\n        //check if hovering\r\n          if(mouse.x > x &&  mouse.x < x + w){\r\n            if(mouse.y > y && mouse.y < y + h ){\r\n              mouse.hovering = true;\r\n            }\r\n            else{\r\n              mouse.hovering = false;\r\n            }\r\n          }\r\n          else{\r\n            mouse.hovering = false;\r\n          }\r\n      }\r\n\r\n\r\n      h1.set(x, y + h + 32);\r\n      h1.drawHeader();\r\n      h1.drawSubheader();\r\n      //subheader(\"IMMERSIVE EXPERIENCE\", x, y + h + 32 + 20);\r\n\r\n    }\r\n\r\n    class Header{\r\n      constructor(text, subtext){\r\n        this.text = text;\r\n        this.subtext = subtext;\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.dy = 0.5;\r\n        this.fontSize = 24;\r\n        this.offset = 24 + 4;\r\n        this.switch = false;\r\n        this.jumble = \"\";\r\n        this.count = 0;\r\n        this.fps = 60;\r\n      }\r\n      set(x, y){\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n      }\r\n      drawHeader(){\r\n        c.font = `500 ${this.fontSize}px GT America`;\r\n\r\n        c.save();\r\n          const rect = new Path2D();\r\n          rect.rect(this.x, this.y -26, c.measureText(this.text).width, 28);\r\n          c.clip(rect);\r\n          c.fillStyle = \"rgba(244, 244,244, 1)\";\r\n          c.fill();\r\n\r\n          if(this.x < canvas.width/2 && this.x + 400 > canvas.width/2 && !this.switch){\r\n            this.offset -= this.dy;\r\n            if(this.offset <= 20){\r\n              this.dy *= 0.975;\r\n              if(this.offset < 0.5){\r\n                this.dy = 0;\r\n                this.offset = 0;\r\n                this.switch = true;\r\n              }\r\n            }\r\n          }\r\n          else{\r\n            if(this.offset > -(this.fontSize + 4) && this.offset < this.fontSize + 4){\r\n              this.dy = 0.5;\r\n              this.offset -= this.dy;\r\n            }\r\n          }\r\n          if(this.offset <= -(this.fontSize + 4)){\r\n            this.offset = this.fontSize + 4;\r\n            this.switch = false;\r\n          }\r\n\r\n          c.fillText(this.text,this.x, this.y - this.offset);\r\n        c.restore();\r\n    }\r\n\r\n      //MIGHT WANT TO CHANGE AFTER\r\n      drawSubheader(){\r\n          const collection = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\r\n          if(this.fps > 4){\r\n            if(this.x < canvas.width/2 && this.x + 400 > canvas.width/2){\r\n              //Jumble into randomness of length text\r\n              if(this.jumble.length < this.subtext.length){\r\n                var newString = \"\";\r\n                for(var i = 0; i < this.jumble.length; i++){\r\n                  newString += collection[Math.floor(Math.random() * collection.length)];\r\n                }\r\n                this.jumble = newString;\r\n                this.jumble += collection[Math.floor(Math.random() * collection.length)];\r\n              }\r\n              else if (this.jumble.length >= this.subtext.length && this.jumble != this.subtext){\r\n                //Jumble into the text itself\r\n                var newString = \"\";\r\n                if(this.count < this.subtext.length){\r\n                  newString += this.subtext.substring(0, this.count + 1);\r\n                  this.count++;\r\n                }\r\n                for(var i = this.count + 1; i <= this.subtext.length; i++){\r\n                  newString += collection[Math.floor(Math.random() * collection.length)];\r\n                }\r\n\r\n                this.jumble = newString;\r\n              }\r\n            }\r\n            else{\r\n              //Jumble into nothingness\r\n              this.count = 0;\r\n              var newString = \"\";\r\n              for(var i = this.count + 1; i <= this.jumble.length; i++){\r\n                newString += collection[Math.floor(Math.random() * collection.length)];\r\n              }\r\n\r\n              this.jumble = newString;\r\n              this.jumble = this.jumble.substring(0, this.jumble.length - 1);\r\n            }\r\n\r\n            this.fps = 0;\r\n          }\r\n\r\n          c.font = \"400 12px GT America Mono\";\r\n          c.fillStyle = \"rgba(244, 244, 244, 1)\";\r\n          c.fill();\r\n          c.fillText(this.jumble,this.x, this.y + 20);\r\n\r\n          this.fps++;\r\n        }\r\n\r\n\r\n  }\r\n\r\n  function drawNav(w){\r\n    var rem = 16;\r\n    var length = Math.floor(w/rem);\r\n    var h = canvas.height - (4*rem);\r\n    c.save();\r\n      //Move origin to bottom center\r\n      c.translate(canvas.width/2 - w/2, h);\r\n\r\n      //Current project out of x being viewed\r\n      c.font = \"400 12px GT America Mono\";\r\n      c.fillStyle = \"rgba(244, 244, 244, 1)\";\r\n      c.fill();\r\n      c.fillText('0' + projectIndex,0, 8);\r\n      c.fillText('0' + 5,w - 24, 8);\r\n\r\n      const rect = new Path2D();\r\n      rect.rect(100, -12.5, 200, 50);\r\n      c.clip(rect);\r\n\r\n      //Iterate by project total * 5\r\n      for(var i = 0; i <= length; i++){\r\n        var x = i*rem + posx/rem;\r\n        c.beginPath();\r\n        //Height is function of position\r\n        if(x > w/2 - 10 && x <= w/2){\r\n          c.moveTo(x, -2);\r\n          c.lineTo(x, 10);\r\n        }\r\n        else if(x > w/2 - 30 && x < w/2 + 10){\r\n          c.moveTo(x, -1);\r\n          c.lineTo(x, 9);\r\n        }\r\n        else{\r\n          c.moveTo(x, 0);\r\n          c.lineTo(x, 8);\r\n        }\r\n        c.strokeStyle = \"#f4f4f4\";\r\n        c.stroke();\r\n      }\r\n\r\n      //Left Gradient\r\n      const g1 = c.createLinearGradient(100, 0, 200, 0);\r\n      g1.addColorStop(0, 'rgba(0,0,0,1)');\r\n      g1.addColorStop(1, 'rgba(0,0,0,0)');\r\n\r\n      //Right Gradient\r\n      const g2 = c.createLinearGradient(200, 0, 300, 0);\r\n      g2.addColorStop(0, 'rgba(0,0,0,0)');\r\n      g2.addColorStop(1, 'rgba(0,0,0,1)');\r\n\r\n      c.fillStyle = g1;\r\n      c.fillRect(100, -2, 100, 20);\r\n\r\n      c.fillStyle = g2;\r\n      c.fillRect(200, -2, 100, 20);\r\n    c.restore();\r\n  }\r\n\r\n  //Probably want to load these from a text file\r\n  var header1 = new Header(\"THOUGHT POLICE\", \"IMMERSION\");\r\n  var header2 = new Header(\"LA BATIE\", \"WEB DESIGN\");\r\n  var header3 = new Header(\"ITALIST\", \"UX DESIGN\");\r\n  var header4 = new Header(\"DEAR VAN GOGH\", \"IMMERSIVE ENVIRONMENT\");\r\n  var header5 = new Header(\"LAMPANELLA\", \"INDUSTRIAL DESIGN\");\r\n\r\n  var img1 = new ImageBox(1);\r\n  var img2 = new ImageBox(2);\r\n  var img3 = new ImageBox(3);\r\n  var img4 = new ImageBox(4);\r\n  var img5 = new ImageBox(5);\r\n\r\n  //Animates Everything\r\n  function draw(){\r\n      img1.image(c, header1);\r\n      img2.image(c, header2);\r\n      img3.image(c, header3);\r\n      img4.image(c, header4);\r\n      img5.image(c, header5);\r\n\r\n      drawNav(400);\r\n  }\r\n\r\n  function animate(){\r\n    requestAnimationFrame(animate);\r\n\r\n    c.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    //Limit distance\r\n    if(posx != mouse.distance){\r\n      if((mouse.dx < 0 && posx > -(canvas.width - 160)) || (mouse.dx > 0 && posx < 440)){\r\n        posx += mouse.dx;\r\n        mouse.dx *= 0.97;\r\n      }\r\n    }\r\n    //draw\r\n    draw();\r\n  }\r\n\r\n  animate();\r\n  });\r\n  return(\r\n    <>\r\n    <h3 ref={cursorRef} className=\"cursor\">open </h3>\r\n    <canvas ref={canvasRef} id=\"canvas\" width={0} height={0}></canvas>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}