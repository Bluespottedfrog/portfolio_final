{"ast":null,"code":"var _jsxFileName = \"E:\\\\portfolio-thomas\\\\src\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Projects() {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    //var canvas = document.querySelector('canvas');\n    var canvas = canvasRef.current;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    window.onresize = e => {\n      canvas.height = window.innerHeight;\n    };\n    var c = canvas.getContext('2d');\n    let img = new Image();\n    img.src = 'test.jpg';\n\n    // GLOBAL VARIABLES\n    var posx = 0;\n    var fps = 60;\n    var mouse = {\n      x: 0,\n      y: undefined,\n      dx: 2,\n      down: false,\n      downPos: 0,\n      distance: 0\n    };\n    canvas.onmousemove = e => {\n      //If not mouse down, then just return\n      if (!mouse.down) return;\n      e.preventDefault();\n\n      //otherwise, is dragging\n      setTimeout(function () {\n        mouse.downPos = e.x;\n      }, 100);\n      mouse.distance = e.x - mouse.downPos;\n      var direction = 1;\n      if (mouse.distance < 0) direction = -1;\n      mouse.dx = Math.abs(mouse.distance / 20) * direction;\n    };\n    //drag start\n    canvas.onmousedown = e => {\n      if (!mouse.down) {\n        mouse.downPos = e.x;\n      }\n      mouse.down = true;\n    };\n    canvas.onmouseup = e => {\n      mouse.down = false;\n      mouse.prevPos = mouse.x;\n    };\n\n    //If Scroll\n    canvas.onwheel = e => {\n      var direction = 0;\n      if (e.deltaY < 0) {\n        //scrolling up\n        direction = 1;\n      }\n      if (e.deltaY > 0) {\n        //scrolling down\n        direction = -1;\n      }\n      console.log(mouse);\n      mouse.distance = 1;\n      mouse.dx = 8 * direction;\n    };\n    var offset = 28;\n    function image(context, arrayPosition, h1) {\n      var w, h;\n      var sx, sy;\n      var imgWidth, imgHeight;\n      var x, y;\n\n      //margin between cards\n      var margin = 40 * arrayPosition;\n\n      //parallax distance\n      var parallax = img.width / 3 * (posx / canvas.width);\n      imgHeight = img.height - img.height / 20;\n\n      //dimensions of card\n      w = 400; // keep at 320\n      h = 400;\n\n      //scale\n      sx = img.width / (img.width / imgHeight * h / w);\n\n      //x, y coords\n      x = canvas.width / 6 + w * arrayPosition + margin + posx;\n      y = canvas.height / 2 - h / 2;\n      context.drawImage(img, img.width / 3 + parallax, img.height / 20 / 2, sx, imgHeight, x, y, w, h);\n      h1.set(x, y + h + 32);\n      h1.drawHeader();\n      h1.drawSubheader();\n      //subheader(\"IMMERSIVE EXPERIENCE\", x, y + h + 32 + 20);\n    }\n\n    class Header {\n      constructor(text, subtext) {\n        this.text = text;\n        this.subtext = subtext;\n        this.x = 0;\n        this.y = 0;\n        this.dy = 0.5;\n        this.fontSize = 24;\n        this.offset = 24 + 4;\n        this.switch = false;\n        this.jumble = \"\";\n        this.count = 0;\n        this.fps = 60;\n      }\n      set(x, y) {\n        this.x = x;\n        this.y = y;\n      }\n      drawHeader() {\n        c.font = `500 ${this.fontSize}px GT America`;\n        c.save();\n        const rect = new Path2D();\n        rect.rect(this.x, this.y - 26, c.measureText(this.text).width, 28);\n        c.clip(rect);\n        c.fillStyle = \"rgba(244, 244,244, 1)\";\n        c.fill();\n        if (this.x < canvas.width / 2 && this.x + 400 > canvas.width / 2 && !this.switch) {\n          this.offset -= this.dy;\n          if (this.offset <= 20) {\n            this.dy *= 0.975;\n            if (this.offset < 0.5) {\n              this.dy = 0;\n              this.offset = 0;\n              this.switch = true;\n            }\n          }\n        } else {\n          if (this.offset > -(this.fontSize + 4) && this.offset < this.fontSize + 4) {\n            this.dy = 0.5;\n            this.offset -= this.dy;\n          }\n        }\n        if (this.offset <= -(this.fontSize + 4)) {\n          this.offset = this.fontSize + 4;\n          this.switch = false;\n        }\n        c.fillText(this.text, this.x, this.y - this.offset);\n        c.restore();\n      }\n\n      //MIGHT WANT TO CHANGE AFTER\n      drawSubheader() {\n        const collection = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        if (this.fps > 4) {\n          if (this.x < canvas.width / 2 && this.x + 400 > canvas.width / 2) {\n            //Jumble into randomness of length text\n            if (this.jumble.length < this.subtext.length) {\n              var newString = \"\";\n              for (var i = 0; i < this.jumble.length; i++) {\n                newString += collection[Math.floor(Math.random() * collection.length)];\n              }\n              this.jumble = newString;\n              this.jumble += collection[Math.floor(Math.random() * collection.length)];\n            } else if (this.jumble.length >= this.subtext.length && this.jumble != this.subtext) {\n              //Jumble into the text itself\n              var newString = \"\";\n              if (this.count < this.subtext.length) {\n                newString += this.subtext.substring(0, this.count + 1);\n                this.count++;\n              }\n              for (var i = this.count + 1; i <= this.subtext.length; i++) {\n                newString += collection[Math.floor(Math.random() * collection.length)];\n              }\n              this.jumble = newString;\n            }\n          } else {\n            //Jumble into nothingness\n            this.count = 0;\n            var newString = \"\";\n            for (var i = this.count + 1; i <= this.jumble.length; i++) {\n              newString += collection[Math.floor(Math.random() * collection.length)];\n            }\n            this.jumble = newString;\n            this.jumble = this.jumble.substring(0, this.jumble.length - 1);\n            //console.log('working');\n          }\n\n          this.fps = 0;\n        }\n        c.font = \"400 12px GT America Mono\";\n        c.fillStyle = \"rgba(244, 244, 244, 1)\";\n        c.fill();\n        c.fillText(this.jumble, this.x, this.y + 20);\n        this.fps++;\n      }\n    }\n    function drawNav() {\n      var length = 40;\n      c.save();\n      const rect = new Path2D();\n      c.translate(canvas.width / 2 - 200, canvas.height - 48);\n      rect.rect(100, -12.5, 200, 50);\n      c.clip(rect);\n\n      //Iterate by project total * 5\n      for (var i = 0; i < length; i++) {\n        var x = i * 12;\n        c.beginPath();\n        //Height is function of position\n        if (x > 180 && x < 220) {\n          c.moveTo(x, -3);\n          c.lineTo(x, 16);\n        } else {\n          c.moveTo(x, 0);\n          c.lineTo(x, 12);\n        }\n        c.strokeStyle = \"#f4f4f4\";\n        c.stroke();\n      }\n      const g1 = c.createLinearGradient(110, 0, 200, 0);\n      g1.addColorStop(0, 'rgba(0,0,0,1)');\n      g1.addColorStop(1, 'rgba(0,0,0,0)');\n      const g2 = c.createLinearGradient(20, 0, 300, 0);\n      g2.addColorStop(0, 'rgba(0,0,0,0)');\n      g2.addColorStop(1, 'rgba(0,0,0,1)');\n      c.fillStyle = g1;\n      c.fillRect(100, -2, 50, 20);\n      c.fillStyle = g2;\n      c.fillRect(250, -2, 50, 20);\n      c.restore();\n    }\n\n    //Probably want to load these from a text file\n    var header1 = new Header(\"THOUGHT POLICE\", \"IMMERSIVE ENVIRONMENT\");\n    var header2 = new Header(\"LA BATIE\", \"INTERACTION DESIGN\");\n    var header3 = new Header(\"ITALIST\", \"UX DESIGN\");\n    var header4 = new Header(\"DEAR VAN GOGH\", \"IMMERSIVE ENVIRONMENT\");\n    var header5 = new Header(\"LAMPANELLA\", \"INDUSTRIAL DESIGN\");\n\n    //Animates Everything\n    function draw() {\n      image(c, 1, header1);\n      image(c, 2, header2);\n      image(c, 3, header3);\n      image(c, 4, header4);\n      image(c, 5, header5);\n      drawNav();\n    }\n    function animate() {\n      requestAnimationFrame(animate);\n      c.clearRect(0, 0, canvas.width, canvas.height);\n      if (posx != mouse.distance) {\n        if (mouse.dx < 0 && posx > -canvas.width || mouse.dx > 0 && posx < canvas.width / 2) {\n          posx += mouse.dx;\n          mouse.dx *= 0.97;\n        }\n      }\n      //draw\n      draw();\n    }\n    animate();\n  });\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    id: \"canvas\",\n    width: 0,\n    height: 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n}\n_s(Projects, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["useRef","useEffect","jsxDEV","_jsxDEV","Projects","_s","canvasRef","canvas","current","width","window","innerWidth","height","innerHeight","onresize","e","c","getContext","img","Image","src","posx","fps","mouse","x","y","undefined","dx","down","downPos","distance","onmousemove","preventDefault","setTimeout","direction","Math","abs","onmousedown","onmouseup","prevPos","onwheel","deltaY","console","log","offset","image","context","arrayPosition","h1","w","h","sx","sy","imgWidth","imgHeight","margin","parallax","drawImage","set","drawHeader","drawSubheader","Header","constructor","text","subtext","dy","fontSize","switch","jumble","count","font","save","rect","Path2D","measureText","clip","fillStyle","fill","fillText","restore","collection","length","newString","i","floor","random","substring","drawNav","translate","beginPath","moveTo","lineTo","strokeStyle","stroke","g1","createLinearGradient","addColorStop","g2","fillRect","header1","header2","header3","header4","header5","draw","animate","requestAnimationFrame","clearRect","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/portfolio-thomas/src/Projects.js"],"sourcesContent":["import {useRef, useEffect} from 'react';\r\n\r\nexport default function Projects(){\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    //var canvas = document.querySelector('canvas');\r\n    var canvas = canvasRef.current;\r\n\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n\r\n    window.onresize = e => {\r\n      canvas.height = window.innerHeight;\r\n    }\r\n\r\n    var c = canvas.getContext('2d');\r\n\r\n    let img = new Image();\r\n    img.src = 'test.jpg';\r\n\r\n    // GLOBAL VARIABLES\r\n    var posx = 0;\r\n    var fps = 60;\r\n\r\n    var mouse = {\r\n      x: 0,\r\n      y: undefined,\r\n      dx: 2,\r\n      down: false,\r\n      downPos: 0,\r\n      distance: 0,\r\n    }\r\n\r\n    canvas.onmousemove = e => {\r\n      //If not mouse down, then just return\r\n      if(!mouse.down) return;\r\n      e.preventDefault();\r\n\r\n      //otherwise, is dragging\r\n      setTimeout(function(){\r\n        mouse.downPos = e.x;\r\n      }, 100);\r\n\r\n      mouse.distance = e.x - mouse.downPos;\r\n      var direction = 1;\r\n\r\n      if(mouse.distance < 0) direction = -1;\r\n      mouse.dx = Math.abs(mouse.distance/20) * direction;\r\n\r\n    };\r\n    //drag start\r\n    canvas.onmousedown = e =>{\r\n      if(!mouse.down){\r\n        mouse.downPos = e.x;\r\n      }\r\n      mouse.down = true;\r\n\r\n    }\r\n\r\n    canvas.onmouseup = e =>{\r\n      mouse.down = false;\r\n      mouse.prevPos = mouse.x;\r\n    }\r\n\r\n    //If Scroll\r\n    canvas.onwheel = e =>{\r\n      var direction = 0;\r\n      if(e.deltaY < 0){\r\n        //scrolling up\r\n        direction = 1;\r\n      }\r\n      if(e.deltaY > 0){\r\n        //scrolling down\r\n        direction = -1;\r\n      }\r\n      console.log(mouse);\r\n      mouse.distance = 1;\r\n      mouse.dx = 8 * direction;\r\n    }\r\n\r\n    var offset = 28;\r\n    function image(context, arrayPosition, h1){\r\n      var w, h;\r\n      var sx, sy;\r\n      var imgWidth, imgHeight;\r\n      var x, y;\r\n\r\n      //margin between cards\r\n      var margin = 40*arrayPosition;\r\n\r\n      //parallax distance\r\n      var parallax = img.width/3 *(posx / (canvas.width));\r\n\r\n      imgHeight = img.height - img.height/20;\r\n\r\n      //dimensions of card\r\n      w = 400; // keep at 320\r\n      h = 400;\r\n\r\n      //scale\r\n      sx = img.width/(img.width/imgHeight * h/w);\r\n\r\n      //x, y coords\r\n      x = (canvas.width/6 + (w * arrayPosition)) + margin + posx;\r\n      y = canvas.height/2 - h/2;\r\n      context.drawImage(img, img.width/3 + parallax, (img.height/20)/2, sx, imgHeight, x, y, w, h);\r\n\r\n      h1.set(x, y + h + 32);\r\n      h1.drawHeader();\r\n      h1.drawSubheader();\r\n      //subheader(\"IMMERSIVE EXPERIENCE\", x, y + h + 32 + 20);\r\n\r\n    }\r\n\r\n    class Header{\r\n      constructor(text, subtext){\r\n        this.text = text;\r\n        this.subtext = subtext;\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.dy = 0.5;\r\n        this.fontSize = 24;\r\n        this.offset = 24 + 4;\r\n        this.switch = false;\r\n        this.jumble = \"\";\r\n        this.count = 0;\r\n        this.fps = 60;\r\n\r\n      }\r\n      set(x, y){\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n      }\r\n      drawHeader(){\r\n        c.font = `500 ${this.fontSize}px GT America`;\r\n\r\n        c.save();\r\n          const rect = new Path2D();\r\n          rect.rect(this.x, this.y -26, c.measureText(this.text).width, 28);\r\n          c.clip(rect);\r\n          c.fillStyle = \"rgba(244, 244,244, 1)\";\r\n          c.fill();\r\n\r\n          if(this.x < canvas.width/2 && this.x + 400 > canvas.width/2 && !this.switch){\r\n            this.offset -= this.dy;\r\n            if(this.offset <= 20){\r\n              this.dy *= 0.975;\r\n              if(this.offset < 0.5){\r\n                this.dy = 0;\r\n                this.offset = 0;\r\n                this.switch = true;\r\n              }\r\n            }\r\n          }\r\n          else{\r\n            if(this.offset > -(this.fontSize + 4) && this.offset < this.fontSize + 4){\r\n              this.dy = 0.5;\r\n              this.offset -= this.dy;\r\n            }\r\n          }\r\n          if(this.offset <= -(this.fontSize + 4)){\r\n            this.offset = this.fontSize + 4;\r\n            this.switch = false;\r\n          }\r\n\r\n          c.fillText(this.text,this.x, this.y - this.offset);\r\n        c.restore();\r\n    }\r\n\r\n    //MIGHT WANT TO CHANGE AFTER\r\n    drawSubheader(){\r\n        const collection = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\r\n        if(this.fps > 4){\r\n\r\n\r\n          if(this.x < canvas.width/2 && this.x + 400 > canvas.width/2){\r\n            //Jumble into randomness of length text\r\n            if(this.jumble.length < this.subtext.length){\r\n              var newString = \"\";\r\n              for(var i = 0; i < this.jumble.length; i++){\r\n                newString += collection[Math.floor(Math.random() * collection.length)];\r\n              }\r\n              this.jumble = newString;\r\n              this.jumble += collection[Math.floor(Math.random() * collection.length)];\r\n            }\r\n            else if (this.jumble.length >= this.subtext.length && this.jumble != this.subtext){\r\n              //Jumble into the text itself\r\n              var newString = \"\";\r\n              if(this.count < this.subtext.length){\r\n                newString += this.subtext.substring(0, this.count + 1);\r\n                this.count++;\r\n              }\r\n              for(var i = this.count + 1; i <= this.subtext.length; i++){\r\n                newString += collection[Math.floor(Math.random() * collection.length)];\r\n              }\r\n\r\n              this.jumble = newString;\r\n            }\r\n          }\r\n          else{\r\n            //Jumble into nothingness\r\n            this.count = 0;\r\n            var newString = \"\";\r\n            for(var i = this.count + 1; i <= this.jumble.length; i++){\r\n              newString += collection[Math.floor(Math.random() * collection.length)];\r\n            }\r\n\r\n            this.jumble = newString;\r\n            this.jumble = this.jumble.substring(0, this.jumble.length - 1);\r\n            //console.log('working');\r\n          }\r\n\r\n          this.fps = 0;\r\n        }\r\n\r\n        c.font = \"400 12px GT America Mono\";\r\n        c.fillStyle = \"rgba(244, 244, 244, 1)\";\r\n        c.fill();\r\n        c.fillText(this.jumble,this.x, this.y + 20);\r\n\r\n        this.fps++;\r\n      }\r\n\r\n\r\n  }\r\n\r\n  function drawNav(){\r\n    var length = 40;\r\n    c.save();\r\n      const rect = new Path2D();\r\n      c.translate(canvas.width/2 - 200, canvas.height - 48);\r\n      rect.rect(100, -12.5, 200, 50);\r\n      c.clip(rect);\r\n\r\n      //Iterate by project total * 5\r\n      for(var i = 0; i < length; i++){\r\n        var x = i*12;\r\n        c.beginPath();\r\n        //Height is function of position\r\n        if(x > 180 && x < 220){\r\n          c.moveTo(x, -3);\r\n          c.lineTo(x, 16);\r\n        }\r\n        else{\r\n          c.moveTo(x, 0);\r\n          c.lineTo(x, 12);\r\n        }\r\n        c.strokeStyle = \"#f4f4f4\";\r\n        c.stroke();\r\n      }\r\n\r\n      const g1 = c.createLinearGradient(110, 0, 200, 0);\r\n      g1.addColorStop(0, 'rgba(0,0,0,1)');\r\n      g1.addColorStop(1, 'rgba(0,0,0,0)');\r\n\r\n      const g2 = c.createLinearGradient(20, 0, 300, 0);\r\n      g2.addColorStop(0, 'rgba(0,0,0,0)');\r\n      g2.addColorStop(1, 'rgba(0,0,0,1)');\r\n\r\n      c.fillStyle = g1;\r\n      c.fillRect(100, -2, 50, 20);\r\n\r\n      c.fillStyle = g2;\r\n      c.fillRect(250, -2, 50, 20);\r\n    c.restore();\r\n  }\r\n\r\n  //Probably want to load these from a text file\r\n  var header1 = new Header(\"THOUGHT POLICE\", \"IMMERSIVE ENVIRONMENT\");\r\n  var header2 = new Header(\"LA BATIE\", \"INTERACTION DESIGN\");\r\n  var header3 = new Header(\"ITALIST\", \"UX DESIGN\");\r\n  var header4 = new Header(\"DEAR VAN GOGH\", \"IMMERSIVE ENVIRONMENT\");\r\n  var header5 = new Header(\"LAMPANELLA\", \"INDUSTRIAL DESIGN\");\r\n\r\n  //Animates Everything\r\n  function draw(){\r\n      image(c, 1, header1);\r\n      image(c, 2, header2);\r\n      image(c, 3, header3);\r\n      image(c, 4, header4);\r\n      image(c, 5, header5);\r\n\r\n      drawNav();\r\n  }\r\n\r\n  function animate(){\r\n    requestAnimationFrame(animate);\r\n\r\n    c.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    if(posx != mouse.distance){\r\n      if((mouse.dx < 0 && posx > -canvas.width) || (mouse.dx > 0 && posx < canvas.width/2)){\r\n        posx += mouse.dx;\r\n        mouse.dx *= 0.97;\r\n      }\r\n    }\r\n    //draw\r\n    draw();\r\n  }\r\n\r\n  animate();\r\n  });\r\n  return(\r\n    <canvas ref={canvasRef} id=\"canvas\" width={0} height={0}></canvas>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}